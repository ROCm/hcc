#!/bin/bash
# Compiles an LLVM bitcode file to HSAIL

# enable bash debugging
KMDBSCRIPT="${KMDBSCRIPT:=0}"

# dump the LLVM bitcode
KMDUMPLLVM="${KMDUMPLLVM:=0}"

# dump the brig
KMDUMPBRIG="${KMDUMPBRIG:=0}"

# pass extra options to llc
KMLLOPT="${KMLLOPT:=""}"

if [ $KMDBSCRIPT == "1" ]; then
  set -x
fi

# check command line argument
if [ "$#" -ne 1 ]; then
  echo "Usage: $0 input_LLVM_IR" >&2
  exit 1
fi

if [ ! -f $1 ]; then
  echo "input LLVM IR $1 is not valid" >&2
  exit 1
fi

BINDIR=$(dirname $0)
HLC_LLVM_LINK=$BINDIR/../../hlc/bin/llvm-link
HLC_OPT=$BINDIR/../../hlc/bin/opt
HLC_LLC=$BINDIR/../../hlc/bin/llc
HLC_ASM=$BINDIR/../../HSAILasm/HSAILasm
NEWLIB=$BINDIR/../../lib

if [ -n "@HSA_LLVM_BIN_DIR@" ]; then
    HLC_LLVM_LINK=@HSA_LLVM_BIN_DIR@/llvm-link
    HLC_OPT=@HSA_LLVM_BIN_DIR@/opt
    HLC_LLC=@HSA_LLVM_BIN_DIR@/llc
fi

HSA_USE_AMDGPU_BACKEND=@HSA_USE_AMDGPU_BACKEND@

if [ $HSA_USE_AMDGPU_BACKEND == "ON" ]; then
  LLD=@HSA_LLVM_BIN_DIR@/ld.lld
  KM_USE_AMDGPU="${KM_USE_AMDGPU:=1}"
fi

if [ $KMDUMPLLVM == "1" ]; then
  cp $1 ./dump.fe.bc
fi

if [ $KM_USE_AMDGPU ]; then
  EXTRA_LIBRARY="$NEWLIB/hsail-amdgpu-wrapper.ll $NEWLIB/amd_gcn.bc"
fi

$HLC_LLVM_LINK -suppress-warnings -o $1.linked.bc $1 $NEWLIB/builtins-hsail.opt.bc $EXTRA_LIBRARY

# error handling for HSAIL llvm-link
RETVAL=$?
if [ $RETVAL != 0 ]; then
  exit $RETVAL
fi

if [ $KMDUMPLLVM == "1" ]; then
  cp $1.linked.bc ./dump.linked.bc
fi


# Optimization notes:
#  -disable-simplify-libcalls:  prevents transforming loops into library calls such as memset, memcopy on GPU 

if [ $KM_USE_AMDGPU ]; then
  $HLC_OPT -O3 -mtriple amdgcn--amdhsa -mcpu=@HSA_AMDGPU_GPU_TARGET@ -disable-simplify-libcalls -verify $1.linked.bc -o $1.opt.bc
else
  $HLC_OPT -O3 -disable-simplify-libcalls -verify $1.linked.bc -o $1.opt.bc
fi

# error handling for HSAIL opt
RETVAL=$?
if [ $RETVAL != 0 ]; then
  exit $RETVAL
fi

if [ $KMDUMPLLVM == "1" ]; then
  cp $1.opt.bc ./dump.opt.bc
fi

if [ $KM_USE_AMDGPU  ]; then
  $HLC_LLC -O2 -mtriple amdgcn--amdhsa -mcpu=@HSA_AMDGPU_GPU_TARGET@ -filetype=obj -o $1.hsail $1.opt.bc
else
  $HLC_LLC -O2 -march=hsail64 -filetype=asm -o $1.hsail $1.opt.bc
fi

# error handling for HSAIL llc
RETVAL=$?
if [ $RETVAL != 0 ]; then
  exit $RETVAL
fi

if [ $KMDUMPBRIG == "1" ]; then
    cp $1.hsail ./dump.hsail
fi

if [ $KM_USE_AMDGPU ]; then
  $LLD  $1.hsail -o $1.brig
else
  cat $NEWLIB/hsa_builtins.hsail >> $1.hsail
  $HLC_ASM -assemble -o $1.brig $1.hsail
fi

# error handling for HSAILasm
RETVAL=$?
if [ $RETVAL != 0 ]; then
  exit $RETVAL
fi

if [ $KMDUMPBRIG == "1" ]; then
    cp $1.brig ./dump.hsa_builtins.brig
fi
